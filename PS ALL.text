19 - 11-24------

Q1.find the largest value

        let a = 10;
        let b = 20;
        let c = 30;

        if (a > b && a > c) {
            console.log(a, " a is greater");
        }
        else {
            if (b > c) {
                console.log(b, " b is greater");
            }
            else {
                console.log(c, " c is greater");
            }
        }

        let res = (a > b) ? "a is greater" : (b > c) ? "b is greater" : "c is greater"
        console.log(res);

        Q2.print numbers from 1 - 10 without using less than symbol

        1.
        for (i = 1; !(i >= 10 + 1); i++) {
            console.log(i);
        }

        2.
        for (i = 1; !(i == 10 + 1); i++) {
            console.log(i);
        }


        for (i = -1; i >= -10; i--) {
            console.log(i);

        }


        Q3.write a program to print 10 to 1 without using greater than or less than operator


        for (i = 10; !(i == 0); i--) {
            console.log(i);
        }

        Q4.write a program to print - 1 to - 10 without using greater than symbol

        for (i = -1; i >= -10; i--) {
            console.log(i);

        }





20 - 11 - 24------- 

        Q5.warp to print sum of digits in a number

        let num = prompt("Enter Numbers")
        num = num.toString()
        sum = 0
        for (i = 0; i < num.length; i++) {
            sum += Number(num[i])
        }
        console.log(sum);

        for(val of num){
            sum+=Number(val)
        }
        console.log(sum);


        Q6.print even sum and odd sum 
        let num="123456789"
        eve=0
        odd=0
        for(i of num){
            (i%2==0)?eve+=Number(i):odd+=Number(i);
        }
        console.log(`even sum - ${eve} odd sum - ${odd}`);


        Q7.prime number

        let num = 11
        count = 0
        for (i = 2; i < num; i++) {
            if (num % i == 0) {
                count++
            }
        }
        if (count == 0) {
            console.log(num, "is prime")
        }
        else {
            console.log(num, "is not a prime")
        }

        OR--

        let num = 7
        count = 0
        for (i = 2; i < num; i++) {
            if (num % i == 0) {
                count++
                break;
            }
        }
        prime = (count == 0) ? `${num} is prime` : `${num} not a prime`
        console.log(prime);

        Q.8 wrap to print sum of odd digits in a number

        let num=123456;
        num=String(num);
        odd=0
        for(i=0;i<num.length;i++){
            console.log(num[i]);
            (num[i]%2!==0)?odd+=Number(num[i]):""          
        }
        console.log(odd);


        Q9.prime number using functon

        function prime(num) {
            if (num > 2) {
                count = 0
                for (i = 2; i < num; i++) {
                    if (num % i == 0) {
                        count++
                        break
                    }
                }
                if (count == 0) {
                    console.log(`${num} is prime`);
                }
                else {
                    console.log(`${num} is not prime`);
                }
            }
            else {
                console.log("not prime");
            }
        }
        prime(11)

        Q10.wrap to print sum of non prime numbers 

        let num=3436;
        let str=String(num);
        let sum=0
        for(i=0;i<str.length;i++){
            count=0
            for(j=2;j<Number(str[i]);j++){
                if(Number(str[i])%j==0){
                    count++
                    break;
                }  
            } 
            if(count!==0){
                sum+=Number(str[i])
            }
        }
        console.log(sum);


21 - 11 - 24-------


        Q11.print prime numbers from 2-100;

        for (j = 2; j < 100; j++) {
            let num = j;
            is_prime = true
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    console.log(`${num} is not a prime number`);
                    is_prime = false
                    break;
                }
            }
            if (is_prime) {
                console.log(`${num} is a prime number`);
            }
        }



22 - 11 - 24------

        
        Q12.factorial of givven number

        let num=5;
        let fact=1;
        for(i=1;i<=num;i++){
            console.log(i);
            fact*=i
        }
        console.log(fact);

        Q13.find min and max numbers

        let str = 23191234561;
        str = String(str)
        let min = str[0]
        let max = str[0]
        for (i of str) {
            if (min > i) {
                min = i
            }
            if (max < i) {
                max = i
            }
        }
        console.log(min, max);


        Q14.find min and max numbers ,find min is first or max is first

        let str = 23191234561;
        str = String(str)
        let min = str[0]
        let max = str[0]
        for (i of str) {
            if (min > i) {
                min = i
            }
            if (max < i) {
                max = i
            }
        }
        console.log(min, max);
        if(str.indexOf(min)<str.indexOf(max)){
            console.log(min,"min is first");
        }
        else{
            console.log(max,"max is first");
        }

        //OR------

        let num = 912345519;
        num = String(num)
        let min = num[0];
        let max = num[0];
        min_ind = 0;
        max_ind = 0;

        for (i in num) {
            if (min > num[i]) {
                min = num[i]
                min_ind = i
            }
            if (max < num[i]) {
                max = num[i]
                max_ind = i
            }
        }
        if (min_ind < max_ind) {
            console.log(min, min_ind, "min is first");
        }
        else {
            console.log(max, max_ind, "max is first");
        }


        //using while loop----------

        let str = 23171234561;
        let min = 9
        let max = 0
        while (str > 0) {
            digit = str % 10
            if (min > digit) {
                min = digit
            }
            if (max < digit) {
                max = digit
            }
            str = Math.floor(str / 10)
        }
        console.log(min, "min")
        console.log(max, "max")



25 - 11 - 24-----

        Q15.find minmum prime number from given numbers;

        let num = 97635;
        num = String(num);
        primes = ""
        for (j of num) {
            count = 0
            for (i = 2; i < j; i++) {
                if (j % i === 0) {
                    count++
                    break;
                }
            }
            if (count == 0) {
                primes += j
            }
        }
        let min = primes[0]
        for (i of primes) {
            if (min > i) {
                min = i
            }
        }
        console.log(`minimum prime number is ${min}`);


        // OR-------

        let num = 97635;
        num = String(num);
        let first = 1
        let min = 0
        for (j of num) {
            count = 0
            for (i = 2; i < j; i++) {
                if (j % i === 0) {
                    count++
                    break;
                }
            }
            if (count == 0) {
                if (first == 1) {
                    min = j
                    first++
                }
                else {
                    if (min > j) {
                        min = j
                    }
                }
            }
        }
        console.log(`minimum prime number is ${min}`);


26 - 11 - 24-----

        
        Q16.left prime

        let num = 6
        is_prime = true
        while (is_prime == true) {
            num--
            count = 0
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    count++
                    break
                }
            }
            if (count == 0) {
                console.log(num, "is left prime")
            }
            else {
                is_prime = false
            }
        }


        Q17.Right priem


        let num = 6
        is_prime = true
        while (is_prime == true) {
            num++
            count = 0
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    count++
                    break
                }
            }
            if (count == 0) {
                console.log(num, "is right prime")
            }
            else {
                is_prime = false
            }
        }


        Q18.nearest prime number-------

        let num = 9
        leftprime = 0;
        rightprime = 0;
        dummy = num
        function is_prime(n) {
            if (n > 2) {
                for (i = 2; i < n; i++) {
                    if (n % i == 0) {
                        return false
                    }
                }
                return true
            }
        }
        for (let i = num - 1; i >= 2; i--) {
            if (is_prime(i)) {
                leftprime = i;
                break;
            }
        }
        while (rightprime == 0) {
            if (is_prime(++num)) {
                rightprime = num;

            }
        }

        console.log(leftprime, rightprime)
        if ((dummy - leftprime) < (rightprime - dummy)) {
            console.log(leftprime, "left is near")
        }
        else if ((dummy - leftprime) > (rightprime - dummy)) {
            console.log(rightprime, "right is near")
        }
        else {
            console.log(leftprime, rightprime, "both are near")
        }



        Q19.prime numbers in a  given number------

        let num = 246795
        let prime = []
        exist = false
        while (num > 0) {
            dig = num % 10;
            num = Math.floor(num / 10)
            if (dig >= 2) {
                let count = 0
                for (i = 2; i < dig; i++) {
                    if (dig % i == 0) {
                        count++
                        // console.log(dig)
                        break;
                    }
                }
                if (count == 0) {
                    if (!prime.includes(dig)) {
                        prime.push(dig)
                        exist = true
                        console.log(dig, "is prime")
                    }
                }
            }

        }
        if (exist == false) {
            console.log("no primes")
        }



        Q20.number of non prime numbers in a given number

        let num = 246795
        let prime = []
        exist = false
        let non_primes=0
        while (num > 0) {
            dig = num % 10;
            num = Math.floor(num / 10)
            if (dig >= 2) {
                let count = 0
                for (i = 2; i < dig; i++) {
                    if (dig % i == 0) {
                        count++
                        non_primes++
                        // console.log(dig)
                        break;
                    }
                }
                if (count == 0) {
                    if (!prime.includes(dig)) {
                        prime.push(dig)
                        exist = true
                        console.log(dig, "is prime")
                    }
                }
            }

        }
        if (exist == false) {
            console.log("no primes")
        }
        console.log(non_primes);

        
        Q21. find the first non repeating character in a string

        let str = "hello world"
        let count = 0
        let found = false;
        for (i of str) {
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (count == 1) {
                console.log(i, "is first non repeating character");
                found = true;
                break;
            }
        }
        if (found == false) {
            console.log("no non repeating characters ");
        }


27-11-24-----

        Q22. how to reverse a number without any methods

        let num=121
        let num1=num
        let rev=0
        while(num>0){
            dig=num%10
            rev=rev*10+dig
            num=Math.floor(num/10)
        }
        console.log(num1===rev?`${num1} is palindrome`:`${num1} is not a palindrome`);


        Q23.febnonci series

        let num = 10
        let first = 0
        let second = 1
        let sum = 0
        for (i = 0; i <= num; i++) {
            sum = first
            next = first + second
            first = second
            second = next
        }
        console.log(sum);

x
        Q24.find sum of prime numbers in a given febnonci series

        let num = 10
        let f = 0
        let s = 1
        let sum = 0
        for (i = 0; i < num - 1; i++) {
            n = f + s
            f = s
            s = n
            if (f >= 2) {
                count = 0
                for (j = 2; j < i; j++) {
                    if (f % j == 0) {
                        count++
                        break;
                    }
                }
                if (count == 0) {
                    count = 0
                    sum += f
                    console.log(f);
                }
            }
        }
        console.log(sum);

28 - 11 - 25-----

        Q25.febnonci series at a given number

        let num = 10
        let first = 0
        let second = 1
        for (i = 0; i < num - 1; i++) {
            next = first + second
            first = second
            second = next
        }
        console.log(first);

        WITH WHILE LOOP----

        let first = 0
        let second = 1

        count = 0
        while (true) {
            if (count == 10 - 1) {
                break
            }
            count++
            next = first + second
            first = second
            second = next
        }
        console.log(first);


        Q26.febnonci series upto given number
        // the febnonci series number should be less the the given number

        let num = 50
        let first = 0
        let second = 1
        while (first < num) {
            console.log(first)
            next = first + second
            first = second
            second = next
        }



        Q27.find non febnonci series numbers

        let num = 50
        let first = 0
        let second = 1
        while (first < num) {
            for (j = first + 1; j < second; j++) {
                console.log(j);
            }
            next = first + second
            first = second
            second = next
        }

        Q28.find length of a string without methods

        let str = "javascript"
        let len = 0
        for (i = 0; str[i] != undefined; i++) {
            len++
            console.log(str[i]);
        }
        console.log(len);


        or----

        let str = "javascript"
        let len = 0
        for (i = 0; ; i++) {
            if (str[i] == undefined) {
                break
            }
            len++
        }
        console.log(len);
 
        Q29.string replace and replaceAll method without methods

        let str = "java scriptj"
        let ser_val = "j"
        let rep_val = "J"
        let res = ""
        count = 0
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val && count == 0) {
                res += rep_val
                count++
            }
            else {
                res += str[i]
            }
        }
        console.log(res);

        Q30.string indexOf with out using methods
        let str = "javascript"
        let ser_val = "a"
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val) {
                console.log(i);
                break
            }
        }


        Q31.string lastIndexOf with ou methods
        let str = "javascripta"
        let ser_val = "a"

        for (i = str.length - 1; i >= 0; i--) {
            if (str[i] == ser_val) {
                console.log(i);
                break
            }
        }


        without reversing--------

        let str = "javascript"
        let ser_val = "a"
        let ind = -1
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val) {
                ind = i
            }
        }

        if (ind == -1) {
            console.log("no character");

        } else {
            console.log(ind);
        }


        Q32.slice method without using methods

        let str = "java script"
        let st_idx = 0
        let end_idx = 5
        let res = ""
        for (i = st_idx; i < end_idx; i++) {
            res += str[i]
        }
        console.log(res);


        Q33.slice method without methods

        let str = "java script"
        function slic_e(str, st_idx, end_idx = str.length) {
            let res = ""
            for (i = st_idx; i < end_idx; i++) {
                res += str[i]
            }
            console.log(res);

        }
        slic_e(str, 2, 5)


        Q34.trim start method

        let str = "  java script  "
        let count = 0
        let res = ""
        for (i = 0; i < str.length; i++) {
            if (str[i] == " " && count == 0) {
            }
            else {
                res += str[i]
                count++
            }
        }
        console.log(res);

        Q35.trim end method

        let str = "  java script  "
        let count = 0
        let res = ""
        for (i = str.length - 1; i >= 0; i--) {
            if (str[i] == " " && count == 0) {
            }
            else {
                res = str[i] + res
                count++
            }
        }
        console.log(res);


        Q36.change the case of a character if it is in lower make it to upper wise - versa
        str = "AbCdeFghI"
        op = "aBcDEfGHi"

        let str = "AbCdeFghI"
        let res = ""
        for (i of str) {
            if (i === i.toUpperCase()) {
                res += i.toLowerCase()
            }
            else {
                res += i.toUpperCase()
            }
        }
        console.log(res);


29 - 11 - 24-------

        Q37.print given number of non fibonaci numbers
        inp: 5
        op: 4 6 7 9 10

        let num = 5
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                console.log(i);
                non_feb++
                if (non_feb == num) {
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }


        Q38.print nth non fibonaci number
        inp: 1
        op: 4

        let num = 1
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                non_feb++
                if (non_feb == num) {
                    console.log(i);
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }

        Q39.print given number of non fibonaci numbers
        inp: 10
        op: 4 6 7 9

        let num = 10
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                non_feb++
                if (i <= num) {

                    console.log(i);
                }
                if (non_feb == num) {
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }


        Q40.vowels and consonents

        let str = "AbC"
        let vow = "aeiou"
        let v_c = 0
        let c_c = 0
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c++
            }
            else {
                c_c++
            }
        }
        console.log(v_c, c_c)


        Q41.print vowels and consonents seperately

        let str = "AbCeioua"
        let vow = "aeiou"
        let v_c = ""
        let c_c = ""
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c += i
            }
            else {
                c_c += i
            }
        }
        console.log(v_c, c_c)


        Q41.print vowels first and consonents second
        inp: abeihl
        op: aeibhl

        let str = "AbCeioua"
        let vow = "aeiou"
        let v_c = ""
        let c_c = ""
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c += i
            }
            else {
                c_c += i
            }
        }
        console.log(v_c + c_c)//prints vowels first cons second
        console.log(c_c + v_c)//prints cons first vowls second


        Q42.print the occurance of given char

        let str = "problem solving"
        let cahr = "o"
        let count = 0
        for (i of str) {
            if (i == cahr) {
                count++
            }
        }
        console.log(count);


        Q43.string statrs With method without using methods

        let str = "javascript"
        let char = "javas"
        let temp = char.length
        let sub = ""
        // console.log(str.startsWith(char));
        for (i = 0; i < temp; i++) {
            sub += str[i]
        }
        char === sub ? console.log(true) : console.log(false);


        Q44.string endsWith method without using methods

        let str = "javascript"
        let char = "script"
        let s_ind = str.length - char.length
        let sub = ""
        // console.log(str.endsWith(char));
        for (i = s_ind; i < str.length; i++) {
            // console.log(str[i]);
            sub += str[i]
        }
        char === sub ? console.log(true) : console.log(false);


29 - 11 - 24--------- 

        Q45.find most repated characher

        let str = "vvvvijaayyyyyyyyy talapathy"
        let unq = ""
        for (i of str) {  //for removing the duplicates
            if (!unq.includes(i) && i !== " ") {
                unq += i
            }
        }

        let most_ocu = 0
        let most_rep = ""
        for (i of unq) {//for checking the ocurance of each char
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (most_ocu <= count) {
                most_ocu = count
                most_rep = i
            }
        }
        console.log(most_rep, most_ocu);


        Q46.find second most repated characher

        let str = "vvvvijaayyyyyyyyy talapathy"
        let unq = ""
        for (i of str) {  //for removing the duplicates
            if (!unq.includes(i) && i !== " ") {
                unq += i
            }
        }

        let most_ocu = 0
        let most_rep = ""
        let sec_most_ocu = 0
        let sec_most = ""
        for (i of unq) {//for checking the ocurance of each char
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (most_ocu <= count) {
                sec_most = most_rep //making the most repeated second most before updating
                sec_most_ocu = most_ocu
                most_ocu = count
                most_rep = i
            }
        }
        console.log(sec_most, sec_most_ocu);
        console.log(most_rep, most_ocu);




        03 - 12 - 25-----
        
        





Q9.let str="aaabbbcccaa"    //op=3a3b3c2a


let str="aaabbbcccaa"
let emp=""
count=1
for(i=0;i<str.length;i++){
    if(str[i]==str[i+1]){
        count++
    }
    else{
        emp+=count+str[i]
        count=1
    }
}
console.log(emp)


Q10.sum of prime numbers in an array  

//arr = [1, 2, 3, 4, 5]   //op=10


// let arr = [1, 2, 3, 4, 5]
        // let sum = 0
        // for (i = 0; i < arr.length; i++) {
        //     let is_prime = true
        //     if (arr[i]>= 2) {
        //         for (j = 2; j < arr[i]; j++) {
        //             if (arr[i] % j == 0) {
        //                 is_prime = false
        //                 break;
        //             }
        //         }
        //         if (is_prime) {
        //             sum += arr[i]
        //         }
        //     }

        // }
        // console.log(sum)




Q11.prime numbers using function

function is_prime(num) {
            if (num >= 2) {
                count = 0
                for (i = 2; i < num; i++) {
                    if (num % 2 == 0) {
                        count++
                        break;
                    }
                }
                if (count == 0) {
                    console.log(num, "is prime")
                }
                else {
                    console.log(num, "is not a prime")
                }
            }
            else {
                console.log(num, "is not a prime")
            }

        }
        is_prime(2)


Q12.iterate a number with out using any methods and find number of even and odd numbers
//inp:num = 123456789  //op:4 even 5 odd

let num = 123456789
        let even = 0
        let odd = 0
        while (num > 0) {
            let digit = num % 10
            if (digit % 2 == 0) {
                even++
            }
            else {
                odd++
            }
            num = Math.floor(num / 10)
        }
        console.log(`even: ${even}`)
        console.log(`odd: ${odd}`)





Q13. random OTP generator


let otp = ""
        for (i = 0; i < 6; i++) {
            dig = Math.floor(Math.random() * 10)
            otp += dig
            if (otp.length == 3) {
                otp += "-"
            }
        }
        console.log(otp);



Q14. check weather the number is palindrome or not without any methods


let num = 121
        let num1 = num
        let rev = 0
        while (num > 0) {
            dig = num % 10
            rev = rev * 10 + dig
            num = Math.floor(num / 10)
        }

        if (num1 === rev) {
            console.log(`${num1} is a palindrome`);
        } else {
            console.log(`${num1} is not a palindrome`);
        } 



Q15. Amstrong number or not

let num = 153;
        let num1 = num;
        let num2 = num1;
        let len = 0
        while (num > 0) {
            len++
            num = Math.floor(num / 10)
        }
        // console.log(len)
        let sum = 0
        while (num1 > 0) {
            let dig = num1 % 10
            sum += Math.pow(dig, len)
            num1 = Math.floor(num1 / 10)
        }
        // console.log(sum)
        if (num2 === sum) {
            console.log(`${num2} is a amstrong number`)
        }
        else {
            console.log(`${num2} is not a amstrong number`)
        }





// Q16. //str="Hello"      //op=I2mm4 
        // here if character is not a vowel the print the next character
        // if character is vowel print the position of character in vowels i.e,aeiou

        let str = "HELLO"
        let vowels = "aeiouAEIOU"
        let res = ""
        for (i = 0; i < str.length; i++) {
            if (vowels.includes(str[i])) {
                for (j = 0; j < vowels.length; j++) {
                    if (str[i] == vowels[j]) {
                        res += j + 1
                    }

                }
            }
            else {
                res += String.fromCharCode(str[i].charCodeAt() + 1)
            }
        }
        console.log(res);