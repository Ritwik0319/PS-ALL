19 - 11-24------

Q1.find the largest value

        let a = 10;
        let b = 20;
        let c = 30;

        if (a > b && a > c) {
            console.log(a, " a is greater");
        }
        else {
            if (b > c) {
                console.log(b, " b is greater");
            }
            else {
                console.log(c, " c is greater");
            }
        }

        let res = (a > b) ? "a is greater" : (b > c) ? "b is greater" : "c is greater"
        console.log(res);

        Q2.print numbers from 1 - 10 without using less than symbol

        1.
        for (i = 1; !(i >= 10 + 1); i++) {
            console.log(i);
        }

        2.
        for (i = 1; !(i == 10 + 1); i++) {
            console.log(i);
        }


        for (i = -1; i >= -10; i--) {
            console.log(i);

        }


        Q3.write a program to print 10 to 1 without using greater than or less than operator


        for (i = 10; !(i == 0); i--) {
            console.log(i);
        }

        Q4.write a program to print - 1 to - 10 without using greater than symbol

        for (i = -1; i >= -10; i--) {
            console.log(i);

        }





20 - 11 - 24------- 

        Q5.warp to print sum of digits in a number

        let num = prompt("Enter Numbers")
        num = num.toString()
        sum = 0
        for (i = 0; i < num.length; i++) {
            sum += Number(num[i])
        }
        console.log(sum);

        for(val of num){
            sum+=Number(val)
        }
        console.log(sum);


        Q6.print even sum and odd sum 
        let num="123456789"
        eve=0
        odd=0
        for(i of num){
            (i%2==0)?eve+=Number(i):odd+=Number(i);
        }
        console.log(`even sum - ${eve} odd sum - ${odd}`);


        Q7.prime number

        let num = 11
        count = 0
        for (i = 2; i < num; i++) {
            if (num % i == 0) {
                count++
            }
        }
        if (count == 0) {
            console.log(num, "is prime")
        }
        else {
            console.log(num, "is not a prime")
        }

        OR--

        let num = 7
        count = 0
        for (i = 2; i < num; i++) {
            if (num % i == 0) {
                count++
                break;
            }
        }
        prime = (count == 0) ? `${num} is prime` : `${num} not a prime`
        console.log(prime);

        Q.8 wrap to print sum of odd digits in a number

        let num=123456;
        num=String(num);
        odd=0
        for(i=0;i<num.length;i++){
            console.log(num[i]);
            (num[i]%2!==0)?odd+=Number(num[i]):""          
        }
        console.log(odd);


        Q9.prime number using functon

        function prime(num) {
            if (num > 2) {
                count = 0
                for (i = 2; i < num; i++) {
                    if (num % i == 0) {
                        count++
                        break
                    }
                }
                if (count == 0) {
                    console.log(`${num} is prime`);
                }
                else {
                    console.log(`${num} is not prime`);
                }
            }
            else {
                console.log("not prime");
            }
        }
        prime(11)

        Q10.wrap to print sum of non prime numbers 

        let num=3436;
        let str=String(num);
        let sum=0
        for(i=0;i<str.length;i++){
            count=0
            for(j=2;j<Number(str[i]);j++){
                if(Number(str[i])%j==0){
                    count++
                    break;
                }  
            } 
            if(count!==0){
                sum+=Number(str[i])
            }
        }
        console.log(sum);


21 - 11 - 24-------


        Q11.print prime numbers from 2-100;

        for (j = 2; j < 100; j++) {
            let num = j;
            is_prime = true
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    console.log(`${num} is not a prime number`);
                    is_prime = false
                    break;
                }
            }
            if (is_prime) {
                console.log(`${num} is a prime number`);
            }
        }



22 - 11 - 24------

        
        Q12.factorial of givven number

        let num=5;
        let fact=1;
        for(i=1;i<=num;i++){
            console.log(i);
            fact*=i
        }
        console.log(fact);

        Q13.find min and max numbers

        let str = 23191234561;
        str = String(str)
        let min = str[0]
        let max = str[0]
        for (i of str) {
            if (min > i) {
                min = i
            }
            if (max < i) {
                max = i
            }
        }
        console.log(min, max);


        Q14.find min and max numbers ,find min is first or max is first

        let str = 23191234561;
        str = String(str)
        let min = str[0]
        let max = str[0]
        for (i of str) {
            if (min > i) {
                min = i
            }
            if (max < i) {
                max = i
            }
        }
        console.log(min, max);
        if(str.indexOf(min)<str.indexOf(max)){
            console.log(min,"min is first");
        }
        else{
            console.log(max,"max is first");
        }

        //OR------

        let num = 912345519;
        num = String(num)
        let min = num[0];
        let max = num[0];
        min_ind = 0;
        max_ind = 0;

        for (i in num) {
            if (min > num[i]) {
                min = num[i]
                min_ind = i
            }
            if (max < num[i]) {
                max = num[i]
                max_ind = i
            }
        }
        if (min_ind < max_ind) {
            console.log(min, min_ind, "min is first");
        }
        else {
            console.log(max, max_ind, "max is first");
        }


        //using while loop----------

        let str = 23171234561;
        let min = 9
        let max = 0
        while (str > 0) {
            digit = str % 10
            if (min > digit) {
                min = digit
            }
            if (max < digit) {
                max = digit
            }
            str = Math.floor(str / 10)
        }
        console.log(min, "min")
        console.log(max, "max")



25 - 11 - 24-----

        Q15.find minmum prime number from given numbers;

        let num = 97635;
        num = String(num);
        primes = ""
        for (j of num) {
            count = 0
            for (i = 2; i < j; i++) {
                if (j % i === 0) {
                    count++
                    break;
                }
            }
            if (count == 0) {
                primes += j
            }
        }
        let min = primes[0]
        for (i of primes) {
            if (min > i) {
                min = i
            }
        }
        console.log(`minimum prime number is ${min}`);


        // OR-------

        let num = 97635;
        num = String(num);
        let first = 1
        let min = 0
        for (j of num) {
            count = 0
            for (i = 2; i < j; i++) {
                if (j % i === 0) {
                    count++
                    break;
                }
            }
            if (count == 0) {
                if (first == 1) {
                    min = j
                    first++
                }
                else {
                    if (min > j) {
                        min = j
                    }
                }
            }
        }
        console.log(`minimum prime number is ${min}`);


26 - 11 - 24-----

        
        Q16.left prime

        let num = 6
        is_prime = true
        while (is_prime == true) {
            num--
            count = 0
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    count++
                    break
                }
            }
            if (count == 0) {
                console.log(num, "is left prime")
            }
            else {
                is_prime = false
            }
        }


        Q17.Right priem


        let num = 6
        is_prime = true
        while (is_prime == true) {
            num++
            count = 0
            for (i = 2; i < num; i++) {
                if (num % i == 0) {
                    count++
                    break
                }
            }
            if (count == 0) {
                console.log(num, "is right prime")
            }
            else {
                is_prime = false
            }
        }


        Q18.nearest prime number-------

        let num = 9
        leftprime = 0;
        rightprime = 0;
        dummy = num
        function is_prime(n) {
            if (n > 2) {
                for (i = 2; i < n; i++) {
                    if (n % i == 0) {
                        return false
                    }
                }
                return true
            }
        }
        for (let i = num - 1; i >= 2; i--) {
            if (is_prime(i)) {
                leftprime = i;
                break;
            }
        }
        while (rightprime == 0) {
            if (is_prime(++num)) {
                rightprime = num;

            }
        }

        console.log(leftprime, rightprime)
        if ((dummy - leftprime) < (rightprime - dummy)) {
            console.log(leftprime, "left is near")
        }
        else if ((dummy - leftprime) > (rightprime - dummy)) {
            console.log(rightprime, "right is near")
        }
        else {
            console.log(leftprime, rightprime, "both are near")
        }



        Q19.prime numbers in a  given number------

        let num = 246795
        let prime = []
        exist = false
        while (num > 0) {
            dig = num % 10;
            num = Math.floor(num / 10)
            if (dig >= 2) {
                let count = 0
                for (i = 2; i < dig; i++) {
                    if (dig % i == 0) {
                        count++
                        // console.log(dig)
                        break;
                    }
                }
                if (count == 0) {
                    if (!prime.includes(dig)) {
                        prime.push(dig)
                        exist = true
                        console.log(dig, "is prime")
                    }
                }
            }

        }
        if (exist == false) {
            console.log("no primes")
        }



        Q20.number of non prime numbers in a given number

        let num = 246795
        let prime = []
        exist = false
        let non_primes=0
        while (num > 0) {
            dig = num % 10;
            num = Math.floor(num / 10)
            if (dig >= 2) {
                let count = 0
                for (i = 2; i < dig; i++) {
                    if (dig % i == 0) {
                        count++
                        non_primes++
                        // console.log(dig)
                        break;
                    }
                }
                if (count == 0) {
                    if (!prime.includes(dig)) {
                        prime.push(dig)
                        exist = true
                        console.log(dig, "is prime")
                    }
                }
            }

        }
        if (exist == false) {
            console.log("no primes")
        }
        console.log(non_primes);

        
        Q21. find the first non repeating character in a string

        let str = "hello world"
        let count = 0
        let found = false;
        for (i of str) {
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (count == 1) {
                console.log(i, "is first non repeating character");
                found = true;
                break;
            }
        }
        if (found == false) {
            console.log("no non repeating characters ");
        }


27-11-24-----

        Q22. how to reverse a number without any methods

        let num=121
        let num1=num
        let rev=0
        while(num>0){
            dig=num%10
            rev=rev*10+dig
            num=Math.floor(num/10)
        }
        console.log(num1===rev?`${num1} is palindrome`:`${num1} is not a palindrome`);


        Q23.febnonci series

        let num = 10
        let first = 0
        let second = 1
        let sum = 0
        for (i = 0; i <= num; i++) {
            sum = first
            next = first + second
            first = second
            second = next
        }
        console.log(sum);

x
        Q24.find sum of prime numbers in a given febnonci series

        let num = 10
        let f = 0
        let s = 1
        let sum = 0
        for (i = 0; i < num - 1; i++) {
            n = f + s
            f = s
            s = n
            if (f >= 2) {
                count = 0
                for (j = 2; j < i; j++) {
                    if (f % j == 0) {
                        count++
                        break;
                    }
                }
                if (count == 0) {
                    count = 0
                    sum += f
                    console.log(f);
                }
            }
        }
        console.log(sum);

28 - 11 - 25-----

        Q25.febnonci series at a given number

        let num = 10
        let first = 0
        let second = 1
        for (i = 0; i < num - 1; i++) {
            next = first + second
            first = second
            second = next
        }
        console.log(first);

        WITH WHILE LOOP----

        let first = 0
        let second = 1

        count = 0
        while (true) {
            if (count == 10 - 1) {
                break
            }
            count++
            next = first + second
            first = second
            second = next
        }
        console.log(first);


        Q26.febnonci series upto given number
        // the febnonci series number should be less the the given number

        let num = 50
        let first = 0
        let second = 1
        while (first < num) {
            console.log(first)
            next = first + second
            first = second
            second = next
        }



        Q27.find non febnonci series numbers

        let num = 50
        let first = 0
        let second = 1
        while (first < num) {
            for (j = first + 1; j < second; j++) {
                console.log(j);
            }
            next = first + second
            first = second
            second = next
        }

        Q28.find length of a string without methods

        let str = "javascript"
        let len = 0
        for (i = 0; str[i] != undefined; i++) {
            len++
            console.log(str[i]);
        }
        console.log(len);


        or----

        let str = "javascript"
        let len = 0
        for (i = 0; ; i++) {
            if (str[i] == undefined) {
                break
            }
            len++
        }
        console.log(len);
 
        Q29.string replace and replaceAll method without methods

        let str = "java scriptj"
        let ser_val = "j"
        let rep_val = "J"
        let res = ""
        count = 0
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val && count == 0) {
                res += rep_val
                count++
            }
            else {
                res += str[i]
            }
        }
        console.log(res);

        Q30.string indexOf with out using methods
        let str = "javascript"
        let ser_val = "a"
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val) {
                console.log(i);
                break
            }
        }


        Q31.string lastIndexOf with ou methods
        let str = "javascripta"
        let ser_val = "a"

        for (i = str.length - 1; i >= 0; i--) {
            if (str[i] == ser_val) {
                console.log(i);
                break
            }
        }


        without reversing--------

        let str = "javascript"
        let ser_val = "a"
        let ind = -1
        for (i = 0; i < str.length; i++) {
            if (str[i] == ser_val) {
                ind = i
            }
        }

        if (ind == -1) {
            console.log("no character");

        } else {
            console.log(ind);
        }


        Q32.slice method without using methods

        let str = "java script"
        let st_idx = 0
        let end_idx = 5
        let res = ""
        for (i = st_idx; i < end_idx; i++) {
            res += str[i]
        }
        console.log(res);


        Q33.slice method without methods

        let str = "java script"
        function slic_e(str, st_idx, end_idx = str.length) {
            let res = ""
            for (i = st_idx; i < end_idx; i++) {
                res += str[i]
            }
            console.log(res);

        }
        slic_e(str, 2, 5)


        Q34.trim start method

        let str = "  java script  "
        let count = 0
        let res = ""
        for (i = 0; i < str.length; i++) {
            if (str[i] == " " && count == 0) {
            }
            else {
                res += str[i]
                count++
            }
        }
        console.log(res);

        Q35.trim end method

        let str = "  java script  "
        let count = 0
        let res = ""
        for (i = str.length - 1; i >= 0; i--) {
            if (str[i] == " " && count == 0) {
            }
            else {
                res = str[i] + res
                count++
            }
        }
        console.log(res);


        Q36.change the case of a character if it is in lower make it to upper wise - versa
        str = "AbCdeFghI"
        op = "aBcDEfGHi"

        let str = "AbCdeFghI"
        let res = ""
        for (i of str) {
            if (i === i.toUpperCase()) {
                res += i.toLowerCase()
            }
            else {
                res += i.toUpperCase()
            }
        }
        console.log(res);


29 - 11 - 24-------

        Q37.print given number of non fibonaci numbers
        inp: 5
        op: 4 6 7 9 10

        let num = 5
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                console.log(i);
                non_feb++
                if (non_feb == num) {
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }


        Q38.print nth non fibonaci number
        inp: 1
        op: 4

        let num = 1
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                non_feb++
                if (non_feb == num) {
                    console.log(i);
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }

        Q39.print given number of non fibonaci numbers
        inp: 10
        op: 4 6 7 9

        let num = 10
        let non_feb = 0
        let first = 0
        let second = 1
        while (non_feb < num) {
            for (i = first + 1; i < second; i++) {
                non_feb++
                if (i <= num) {

                    console.log(i);
                }
                if (non_feb == num) {
                    break
                }
            }
            next = first + second
            first = second
            second = next
        }


        Q40.vowels and consonents

        let str = "AbC"
        let vow = "aeiou"
        let v_c = 0
        let c_c = 0
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c++
            }
            else {
                c_c++
            }
        }
        console.log(v_c, c_c)


        Q41.print vowels and consonents seperately

        let str = "AbCeioua"
        let vow = "aeiou"
        let v_c = ""
        let c_c = ""
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c += i
            }
            else {
                c_c += i
            }
        }
        console.log(v_c, c_c)


        Q41.print vowels first and consonents second
        inp: abeihl
        op: aeibhl

        let str = "AbCeioua"
        let vow = "aeiou"
        let v_c = ""
        let c_c = ""
        for (i of str) {
            if (vow.includes(i.toLowerCase())) {
                v_c += i
            }
            else {
                c_c += i
            }
        }
        console.log(v_c + c_c)//prints vowels first cons second
        console.log(c_c + v_c)//prints cons first vowls second


        Q42.print the occurance of given char

        let str = "problem solving"
        let cahr = "o"
        let count = 0
        for (i of str) {
            if (i == cahr) {
                count++
            }
        }
        console.log(count);


        Q43.string statrs With method without using methods

        let str = "javascript"
        let char = "javas"
        let temp = char.length
        let sub = ""
        // console.log(str.startsWith(char));
        for (i = 0; i < temp; i++) {
            sub += str[i]
        }
        char === sub ? console.log(true) : console.log(false);


        Q44.string endsWith method without using methods

        let str = "javascript"
        let char = "script"
        let s_ind = str.length - char.length
        let sub = ""
        // console.log(str.endsWith(char));
        for (i = s_ind; i < str.length; i++) {
            // console.log(str[i]);
            sub += str[i]
        }
        char === sub ? console.log(true) : console.log(false);


29 - 11 - 24--------- 

        Q45.find most repated characher

        let str = "vvvvijaayyyyyyyyy talapathy"
        let unq = ""
        for (i of str) {  //for removing the duplicates
            if (!unq.includes(i) && i !== " ") {
                unq += i
            }
        }

        let most_ocu = 0
        let most_rep = ""
        for (i of unq) {//for checking the ocurance of each char
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (most_ocu <= count) {
                most_ocu = count
                most_rep = i
            }
        }
        console.log(most_rep, most_ocu);


        Q46.find second most repated characher

        let str = "vvvvijaayyyyyyyyy talapathy"
        let unq = ""
        for (i of str) {  //for removing the duplicates
            if (!unq.includes(i) && i !== " ") {
                unq += i
            }
        }

        let most_ocu = 0
        let most_rep = ""
        let sec_most_ocu = 0
        let sec_most = ""   
        for (i of unq) {//for checking the ocurance of each char
            count = 0
            for (j of str) {
                if (i === j) {
                    count++
                }
            }
            if (most_ocu <= count) {
                sec_most = most_rep //making the most repeated second most before updating
                sec_most_ocu = most_ocu
                most_ocu = count
                most_rep = i
            }
        }
        console.log(sec_most, sec_most_ocu);
        console.log(most_rep, most_ocu);
        
        
        
03 - 12 - 24------


        Q47. anagrams
        listen silent  melon lemon   sai ias  polo loop   cat act

        // 1.they should contain the same char
        // 2.the no.of occurances should be same in both strs

        // steps---
        let s1 = "lemon"
        let s2 = "melon"
        let is_anagram = true

        // 1.condition to check the length is equal or not
        // --if not equal we can directly say it is not a anagram
        if (s1.length == s2.length) {
            // 2.if lengths are equal -- find uniques in any one str.
            let unq = ""
            for (i of s1) {
                if (!unq.includes(i)) {
                    unq += i
                }
            }
            // 3.after finding the unique  -- check weather the unique chars are same in both strs, if same they are anagrams else not anagrams.
            for (i of unq) {
                c1 = 0
                c2 = 0
                //comparing str1 with unq
                for (j of s1) {
                    if (i == j) {
                        c1++
                    }
                }
                //comparing str2 with unq
                for (k of s2) {
                    if (i == k) {
                        c2++
                    }
                }
                if (c1 !== c2) {
                    is_anagram = false
                }
            }
            if (is_anagram) {
                console.log("is anagram");
            }
            else {
                console.log("is not a anagram");
            }
        }
        else {
            console.log("is not an anagram");
        }
        

        Q48. string rotation

        let str = "hello"
        let rotations = 9
        let start = ""
        let end = ""
        if (rotations > str.length) {
            rotations = rotations % str.length//gives reminder 9%5=4
        }
        for (i = 0; i < rotations; i++) {
            end += str[i]
        }

        for (i = rotations; i < str.length; i++) {
            start += str[i]
        }
        console.log(start + end);

        or------
        let str = "java script"
        let rotations = 19
        let end = ""
        if (rotations > str.length) {
            rotations = rotations % str.length//gives reminder 9%5=4
        }
        let start = str.slice(rotations)
        for (i = 0; i < rotations; i++) {
            end += str[i]
        }
        console.log(start)
        console.log(end)
        console.log(start + end)



        Q49. find uniques and duplicates in a number

        let num = 218322988
        num = String(num)
        let emp = ""
        let unq = ""
        let dup = ""
        for (i of num) {
            if (!emp.includes(i)) {
                emp += i
            }
        }
        // console.log(emp);
        for (i of emp) {
            count = 0
            for (j of num) {
                if (i == j) {
                    count++
                }
            }
            if (count == 1) {
                unq += i
            }
            else {
                dup += i
            }
        }
        // console.log(unq, dup);
        (unq.length == 1) ? console.log(`unique is ${unq}`) : console.log(`uniques are ${unq}`);
        (dup.length == 1) ? console.log(`duplicate is ${dup}`) : console.log(`duplicates are ${dup}`);


        Q50 .is substring or not --------

        let str="sasikanth"
        let sub_str="kan"
        let is_sub_str=false
        for(i=0;i<str.length;i++){
            emp=""
            for(j=i;j<sub_str.length+i;j++){
                emp+=str[j]
            }
            console.log(emp);

            if(emp===sub_str){
                is_sub_str=true
                break
            }
        }
        if(is_sub_str){
            console.log(true);

        }else{
            console.log(false);

        }

        OR--

        let str = "javascript"
        let substr = "script"
        let is_sub_str = false
        for (i = 0; i < str.length; i++) {
            let emp = str.slice(i, substr.length + i)
            if (emp == substr) {
                is_sub_str = true
            }
        }
        (is_sub_str) ? console.log(true) : console.log(false);



        Q51. find longest palindromic sub string

        let str = "chcarachter"
        let palin = ""
        for (i = 0; i < str.length; i++) {
            let emp = ""
            for (j = i; j < str.length; j++) {
                emp += str[j]
                rev = ""
                if (emp.length > 2) {
                    for (k = emp.length - 1; k >= 0; k--) {
                        rev += emp[k]
                    }
                }
                if (emp == rev && palin.length<rev.length) {
                    palin=rev
                }
            }
            // console.log(emp);
        }
        console.log(palin);


        Q52. divide the sting into number of parts

        let str = "abcdefghijklmnopqrstuvwxyz"
        let parts = 4
        for (i = 0; i < str.length; i += parts) {
            emp = ""
            for (j = i; j < parts + i; j++) {
                if (str[j] != undefined) {
                    emp += str[j]
                }
            }
            console.log(emp); 
        }


        Q53.
        const str = "abcdefghijklmnopqrstuvwxyz"
        // op="abcdefghijklmnopqrstuvwxyza"
        const parts = 26
        let res = ""
        for (i = 0; i < str.length; i += parts) {
            emp = ""
            for (j = i; j < parts + i; j++) {
                emp += str[j % str.length]
            }
            res += emp
        }
        console.log(res)



        Q54.pad start and pad end without methods
        add stars to string until given length

        let str = "string"
        let len = 10
        if (len > str.length) {
            dif = len - str.length
        }
        console.log(dif);
        emp = ""
        for (i = 0; i < dif; i++) {
            emp += "*"
        }
        console.log(str + emp);//to add stars at end
        console.log(emp + str);//to add stars at begining

        while(str.length<len){
            str+="*"
            if(str.length<len){
                str="*"+str
            }
        }
        console.log(str);
        

        // 4 - 12 - 24-----------------------

        // Q55.if the sum of element is even - true, odd - false
        // inp = [202, 89, 112, 88]   op = [true, false, true, true]

        // const arr = [202, 89, 112, 88]
        // let res = []
        // for (i of arr) {
        //     i = i.toString()
        //     // console.log(i)
        //     let emp = 0
        //     for (j of i) {
        //         // console.log(j)
        //         emp += Number(j)
        //     }
        //     if (emp % 2 == 0) {
        //         res.push(true)
        //     } else {
        //         res.push(false)
        //     }
        // }
        // console.log(res)



        // Q56.sum of the each elelment in an array
        // inp = [202, 89, 112, 88]   op = [ 4, 17, 4, 16 ]

        // let res2 = []
        // for (i of arr) {
        //     i = i.toString()
        //     // console.log(i)
        //     let emp = 0
        //     for (j of i) {
        //         // console.log(j)
        //         emp += Number(j)
        //     }
        //     res2.push(emp)
        // }
        // console.log(res2)


        // Q57.Recurssion-a function caling it's self agin and again

        // // let num = 7; // Number for which we want to find the factorial

        // // Recursive function to calculate factorial
        // function factorial(num) {
        //     // Base case: If number is 1, factorial is 1
        //     if (num == 1) { // Example sequence: 7 → 6 → 5 → 4 → 3 → 2 → 1
        //         return 1;
        //     } else {
        //         // Recursive case: Multiply current number with factorial of previous number
        //         return num * factorial(num - 1);
        //     }
        // }

        // // Flow for num = 7:
        // // factorial(7)
        // // → 7 * factorial(6)
        // // → 7 * (6 * factorial(5))
        // // → 7 * (6 * (5 * factorial(4)))
        // // → 7 * (6 * (5 * (4 * factorial(3))))
        // // → 7 * (6 * (5 * (4 * (3 * factorial(2)))))
        // // → 7 * (6 * (5 * (4 * (3 * (2 * factorial(1))))))
        // // factorial(1) returns 1 (base case)
        // // Final result: 7 * 6 * 5 * 4 * 3 * 2 * 1

        // console.log(factorial(num)); // Output: 5040



        // Q58.TRIM method

        // const str = "     java script          "; // Original string with spaces at start and end
        // let emp = "";  // Temporary variable to store trimmed string (front spaces removed)
        // let count = 0; // Counter to track when we start adding characters

        // // Loop through each character in the string
        // for (let i of str) {
        //     // Condition: Add the character if it's NOT a space OR we already started adding characters
        //     if (i !== " " || count > 0) {
        //         emp += i;   // Append character to emp
        //         count++;    // Increment count so spaces in the middle are allowed
        //     }
        // }
        // console.log(emp); // This is the string without leading spaces

        // let emp2 = "";  // Temporary variable to store final trimmed string (end spaces removed)
        // let count2 = 0; // Counter to track when we start adding characters from the back

        // // Loop through the string in reverse
        // for (i = emp.length - 1; i >= 0; i--) {
        //     console.log(emp[i]); // Debug: show each character from end to start

        //     // Condition: Add the character if it's NOT a space OR we already started adding characters
        //     if (emp[i] !== " " || count2 > 0) {
        //         emp2 = emp[i] + emp2; // Prepend character to emp2 (to maintain correct order)
        //         count2++; // Increment count so spaces in the middle are allowed
        //     }
        // }

        // console.log(emp2); // This is the string without leading and trailing spaces



        // 5-12-24-----

        // Q59. arr.push method

        // let num = 1
        // let arr = []
        // arr[arr.length] = num
        // console.log(arr)



        // Q60. arr.pop method
        // let arr = [1, 2, 3, 4, 5, 6]
        // const arr_pop = (arr) => {
        //     if (arr.length > 0) {
        //         arr.length = arr.length - 1
        //     }
        //     console.log(arr)
        // }
        // arr_pop(arr)
        // arr_pop(arr)
        // arr_pop(arr)
        // arr_pop(arr)
        // arr_pop(arr)
        // arr_pop(arr)





        // Q61.print the index's of even numbers in even index

        // const arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] //2
        // for (i = 0; i < arr.length; i++) {
        //     if (arr[i] % 2 == 0 && i % 2 == 0) {
        //         console.log(arr[i])
        //     }
        // }



        // Q62.get uniques in an array

        // const arr = [1, 2, 1, 6, 9, 9, 1, 20, 3, 3, 4, 3, 4, 5, 5, 1]
        // let unq = []
        // for (i of arr) {
        //     if (!unq.includes(i)) {
        //         unq.push(i)
        //     }
        // }
        // console.log(unq)




        // Q63.includes method in arr

        // const arr = [1, 2, 1, 6, 9, 9, 1, 20, 3, 3, 4, 3, 4, 5, 5, 1]
        // const num = 1
        // const Includes = (num, arr) => {
        //     let present = false;
        //     for (i of arr) {
        //         if (i == num) {
        //             present = true
        //             break
        //         }
        //     }
        //     return present
        // }
        // console.log(Includes(num, arr))



        // Q64.print the given op

        // // Original string
        // const str = "abc"; // Expected output: "bcd"

        // // Variable to store the new string after shifting characters
        // let emp = "";

        // // Loop through each index of the string
        // for (i in str) {
        //     // Get the ASCII code of the character at position i
        //     let code = str.charCodeAt(i);

        //     // Convert ASCII code to the next character (shift by +1)
        //     emp += String.fromCharCode(code + 1);
        // }

        // // Print the resulting string
        // console.log(emp);



        // Q65.print the op
        // if vowel print 2nd next character
        // const str = "hello world"; // Expected output: "hgllq wqrld"

        // // Empty string to store the modified result
        // let emp = "";

        // // String containing all vowels (both uppercase and lowercase)
        // let vow = "aeiouAEIOU";

        // // Loop through each index in the string
        // for (i in str) {

        //     // Check if the current character is a vowel
        //     if (vow.includes(str[i])) {

        //         // Get the ASCII code of the vowel
        //         let code = str.charCodeAt(i);
        //         console.log(code); // For debugging: log ASCII value

        //         // Convert ASCII code to a new character shifted by +2
        //         emp += String.fromCharCode(code + 2);
        //     }
        //     else {
        //         // If not a vowel, just add the character as it is
        //         emp += str[i];
        //     }
        // }

        // // Print the final modified string
        // console.log(emp);


        // Q66.print the op

        // // Original string
        // const str = "abc"; // Expected output: "zyx"

        // // Empty string to store the reversed alphabet mapping result
        // let emp = "";

        // // Loop through each index in the string
        // for (i in str) {
        //     // Get the ASCII code of the current character
        //     let code = str.charCodeAt(i);

        //     // Check if the character is a lowercase letter (ASCII 'a' = 97)
        //     if (code >= 97) {
        //         // Find the position of the letter in the alphabet (0 for 'a', 1 for 'b', etc.)
        //         let diff = code - 97;

        //         // Map it to the "opposite" letter (a→z, b→y, c→x, etc.)
        //         emp += String.fromCharCode(122 - diff); // 122 = ASCII code for 'z'
        //     }
        // }

        // // Print the transformed string
        // console.log(emp);


        // Q67.if elememt contains duplicates return true else false
        // arr = [202, 89, 112, 88] op=[true,false,true,true]
        // let op = []
        // for (i of arr) {
        //     i = i.toString()
        //     let unq = ""
        //     let is_duplicate = false;
        //     for (j of i) {
        //         if (unq.includes(j)) {
        //             is_duplicate = true;
        //             break;
        //         } else {
        //             unq += j
        //         }
        //     }
        //     op.push(is_duplicate)
        // }
        // console.log(op)


        // or-------------

        // for (i of arr) {
        //     let emp = ""
        //     for (j of i) {
        //         if (!emp.includes(j)) {
        //             emp += j
        //         }
        //     }
        //     if (emp.length !== i.length) {
        //         console.log(i, "duplicales")
        //     } else {
        //         console.log(i, "uniques")
        //     }
        // }


        // 06 - 12 - 24------

        // Q68.find missing nums
        // num = "123987" op="456"

        // const num = "123987"
        // let min = num[0]
        // let max = num[0]
        // let op = ""
        // for (i of num) {
        //     if (i < min) {
        //         min = i
        //     }
        //     if (i > max) {
        //         max = i
        //     }
        // }
        // for (i = min; i <= max; i++) {
        //     if (!num.includes(i)) {
        //         op += i
        //     }
        //     console.log(i)
        // }
        // console.log(min, max, op)

        // or-----
        // let num = 123987
        // num = num.toString().split("").map(Number).sort()
        // console.log(num)
        // let start = num[0]
        // let end = num[num.length - 1]
        // let op = ""
        // for (i = start; i <= end; i++) {
        //     if (!num.includes(i)) {
        //         op += i
        //     }
        // }
        // console.log(op)




        // Q69.sort method ass,dess

        // let num = 1256446597543;
        // num = num.toString().split("").map(Number)
        // for (i = 0; i < num.length; i++) {
        //     for (j = i + 1; j < num.length; j++) {
        //         if (num[i] > num[j]) {
        //             temp = num[i]
        //             num[i] = num[j]
        //             num[j] = temp
        //         }
        //     }
        // }
        // console.log(num)

        // for (i = 0; i < num.length; i++) {
        //     for (j = i + 1; j < num.length; j++) {
        //         if (num[i] < num[j]) {
        //             temp = num[i]
        //             num[i] = num[j]
        //             num[j] = temp
        //         }
        //     }
        // }
        // console.log(num)



        // Q70.find missing even numbers

        // let num = 123579;
        // num = num.toString().split("").map(Number).sort()
        // console.log(num)
        // const start = num[0]
        // const end = num[num.length - 1]
        // let op = ""
        // for (i = start; i <= end; i++) {
        //     console.log(i)
        //     if (i % 2 == 0 && !num.includes(i)) {
        //         op += i
        //     }
        // }
        // console.log(op)



        // 09-12-24----------

        // Q71.find missing prime numbers

        // let arr = [2, 3, 17, 19]
        // let op = []
        // let start = arr[0]
        // let end = arr[arr.length - 1]
        // for (j = start; j < end; j++) {
        //     let count = 0
        //     // console.log(j)
        //     for (i = 2; i < j; i++) {
        //         if (j % i == 0) {
        //             count++
        //             break
        //         }
        //     }
        //     if (count == 0) {
        //         // console.log(j,"is prime")
        //         if (!arr.includes(j)) {
        //             op.push(j)
        //         }
        //     }
        //     // else{
        //     //     // console.log(j,"is not prime")
        //     // }
        // }
        // console.log(op)



        // Q72.find weather the array is ass dedc unorderd or same

        // const arr = [10, 19, 52, 2]
        // let is_ass = true;
        // let is_des = true;
        // let is_same = true;
        // for (i = 0; i < arr.length - 1; i++) {
        //     if (arr[i] > arr[i + 1]) {
        //         is_ass = false
        //     }
        //     if (arr[i] < arr[i + 1]) {
        //         is_des = false
        //     }
        //     if (arr[i] !== arr[i + 1]) {
        //         is_same = false
        //     }
        // }
        // if (is_same) {
        //     console.log("same elements")
        // }
        // else if (is_ass) {
        //     console.log("assending")
        // }
        // else if (is_des) {
        //     console.log("descending")
        // }
        // else {
        //     console.log("unordered")
        // }


        // Q73. sort the elements based on length


        // let arr = ["hi", "all", "everyone","a"]
        // for (i = 0; i < arr.length; i++) {
        //     for (j = i + 1; j < arr.length; j++) {

        //         if (arr[i].length > arr[j].length) {
        //             temp = arr[i]
        //             arr[i] = arr[j]
        //             arr[j] = temp
        //         }
        //     }
        // }
        // console.log(arr)


        // Q74.sort the array based on alaphbitical order

        // let arr = ["sai", "nikhil", "pradeep", "goutham", "raju"]

        // for (i = 0; i < arr.length; i++) {
        //     for (j = i + 1; j < arr.length; j++) {
        //         if (arr[i][0]> arr[j][0]) {
        //             temp = arr[i]
        //             arr[i] = arr[j]
        //             arr[j] = temp
        //         }
        //     }
        // }
        // console.log(arr)


        // or-----------

        // for (i = 0; i < arr.length; i++) {
        //     for (j = i + 1; j < arr.length; j++) {
        //         if (arr[i].charCodeAt(0) > arr[j].charCodeAt(0)) {
        //             temp = arr[i]
        //             arr[i] = arr[j]
        //             arr[j] = temp
        //         }
        //     }
        // }
        // console.log(arr)



        // Q75.find the mid element in an array

        // const arr = [1, 2, 3, 4, 5, 6, 7, 8]
        // let mid = Math.floor(arr.length / 2)
        // console.log(mid)
        // if (arr.length % 2 == 0) {
        //     console.log(arr[mid - 1], arr[mid])
        // } else {
        //     console.log(arr[mid])
        // }



        // Q76.sort the array based on element vowel count
        // let arr = ["aeiou", "aeio", "aeiooooi"]
        // const vow = "aeiouAEIOU"
        // for (i = 0; i < arr.length; i++) {
        //     for (j = i + 1; j < arr.length; j++) {
        //         let c1 = 0
        //         let c2 = 0
        //         for (k of arr[i]) {
        //             if (vow.includes(k)) {
        //                 c1++
        //             }
        //         }
        //         for (l of arr[j]) {
        //             if (vow.includes(l)) {
        //                 c2++
        //             }
        //         }
        //         if (c1 < c2) {
        //             temp = arr[i]
        //             arr[i] = arr[j]
        //             arr[j] = temp
        //         }
        //     }
        // }
        // console.log(arr)



        // Q77. find the two elements that match the target

        // const arr = [10, 20, 11, 12, 18, 30]
        // const target = 30
        // for (i = 0; i < arr.length; i++) {
        //     for (j = i + 1; j < arr.length; j++) {
        //         // console.log(arr[i],arr[j])
        //         if (arr[i] + arr[j] == target) {
        //             console.log(arr[i], arr[j])
        //         } else if (arr[i] == target) {
        //             console.log(arr[i])
        //         } else if (arr[j] == target) {
        //             console.log(arr[j])
        //         }
        //     }
        // }




        // 10-12-24---------

        // Q78.find the rankings of array
        // inp="20 15 26 2 98 6"
        // op="4, 3, 5, 1, 6, 2"

        // let arr = "20 15 26 2 98 6".split(" ").map(Number)
        // let temp = []
        // for (i of arr) {
        //     let c = 0
        //     for (j of arr) {
        //         if (i > j) {
        //             c++
        //         }
        //     }
        //     console.log(c + 1)
        // }

        // --or--

        // let arr = "20 15 26 2 98 6".split(" ").map(Number)
        // let temp = []
        // for (i of arr) {
        //     temp.push(i)
        // }
        // let emp = []
        // arr.sort((a, b) => a - b)
        // for (i of temp) {
        //     emp.push(arr.indexOf(i) + 1)
        //     // console.log(temp.indexOf(i)+1)
        // }
        // console.log(emp)

        // --or--
        // let arr = "20 15 26 2 98 6".split(" ").map(Number)
        // let temp = []
        // for (i of arr) {
        //     temp.push(i)
        // }
        // let emp = []
        // arr.sort((a, b) => a - b)
        // for (i of temp) {
        //     for (j in arr) {
        //         if (i === arr[j]) {
        //             emp.push(Number(j) + 1)
        //             // console.log(i,arr[j],Number(j)+1)
        //         }
        //     }
        // }
        // console.log(temp)
        // console.log(emp)




Q9.let str="aaabbbcccaa"    //op=3a3b3c2a


let str="aaabbbcccaa"
let emp=""
count=1
for(i=0;i<str.length;i++){
    if(str[i]==str[i+1]){
        count++
    }
    else{
        emp+=count+str[i]
        count=1
    }
}
console.log(emp)





Q14. check weather the number is palindrome or not without any methods

let num = 121
        let num1 = num
        let rev = 0
        while (num > 0) {
            dig = num % 10
            rev = rev * 10 + dig
            num = Math.floor(num / 10)
        }

        if (num1 === rev) {
            console.log(`${num1} is a palindrome`);
        } else {
            console.log(`${num1} is not a palindrome`);
        } 



Q15. Amstrong number or not

let num = 153;
        let num1 = num;
        let num2 = num1;
        let len = 0
        while (num > 0) {
            len++
            num = Math.floor(num / 10)
        }
        // console.log(len)
        let sum = 0
        while (num1 > 0) {
            let dig = num1 % 10
            sum += Math.pow(dig, len)
            num1 = Math.floor(num1 / 10)
        }
        // console.log(sum)
        if (num2 === sum) {
            console.log(`${num2} is a amstrong number`)
        }
        else {
            console.log(`${num2} is not a amstrong number`)
        }





// Q16. //str="Hello"      //op=I2mm4 
        // here if character is not a vowel the print the next character
        // if character is vowel print the position of character in vowels i.e,aeiou

        let str = "HELLO"
        let vowels = "aeiouAEIOU"
        let res = ""
        for (i = 0; i < str.length; i++) {
            if (vowels.includes(str[i])) {
                for (j = 0; j < vowels.length; j++) {
                    if (str[i] == vowels[j]) {
                        res += j + 1
                    }

                }
            }
            else {
                res += String.fromCharCode(str[i].charCodeAt() + 1)
            }
        }
        console.log(res);